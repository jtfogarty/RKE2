# Wait for Server 1 to be ready before continuing with metallb deployment
- name: Wait for k8s nodes with node label 'server=true' to be ready, otherwise we cannot start metallb deployment
  ansible.builtin.command:
    cmd: "kubectl wait --for=condition=Ready nodes --selector server=true --timeout=600s"
  register: nodes_ready
  retries: 120
  delay: 10
  changed_when: true
  become_user: "{{ ansible_user }}"
  when: inventory_hostname == groups['server_nodes'][0]

- name: Ensure kubeconfig file exists and has correct permissions
  ansible.builtin.file:
    path: /etc/rancher/rke2/rke2.yaml
    state: file
    mode: '0644'
  when: inventory_hostname == groups['server_nodes'][0]
  become: true

- name: Check if kubeconfig file exists
  ansible.builtin.stat:
    path: /etc/rancher/rke2/rke2.yaml
  register: kubeconfig_stat
  when: inventory_hostname == groups['server_nodes'][0]

- name: Fail if kubeconfig file does not exist
  ansible.builtin.fail:
    msg: "Kubeconfig file not found at /etc/rancher/rke2/rke2.yaml"
  when: 
    - inventory_hostname == groups['server_nodes'][0]
    - not kubeconfig_stat.stat.exists

# Create namespace so that we can deploy metallb
- name: Apply MetalLB namespace and resources
  ansible.builtin.command:
    cmd: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/config/manifests/metallb-native.yaml
  become_user: "{{ ansible_user }}"
  changed_when: true
  when: inventory_hostname == groups['server_nodes'][0]

# Wait for metallb deployment pods to be alive before deploying metallb manifests
- name: Wait for metallb pods to be ready, otherwise we cannot start metallb deployment
  ansible.builtin.command:
    cmd: "kubectl wait --namespace metallb-system --for=condition=ready pod --selector=component=controller --timeout=1800s"
  changed_when: true
  become_user: "{{ ansible_user }}"
  when: inventory_hostname == groups['server_nodes'][0]

# Apply L2 Advertisement for metallb
- name: Apply metallb L2 Advertisement
  ansible.builtin.command:
    cmd: kubectl apply -f https://raw.githubusercontent.com/JamesTurland/JimsGarage/main/Kubernetes/RKE2/l2Advertisement.yaml
  become_user: "{{ ansible_user }}"
  changed_when: true
  when: inventory_hostname == groups['server_nodes'][0]

# Deploy metal IP Pool to Server 1
- name: Copy metallb IPPool to server 1
  ansible.builtin.template:
    src: templates/metallb-ippool.j2
    dest: /home/{{ ansible_user }}/ippool.yaml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  when: inventory_hostname == groups['server_nodes'][0]

# don't think this will work as nodes are no execute, might need agents first
- name: Apply metallb ipppool
  ansible.builtin.command:
    cmd: kubectl apply -f /home/{{ ansible_user }}/ippool.yaml
  become: false
  changed_when: true
  when: inventory_hostname == groups['server_nodes'][0]
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config

# Rancher installation tasks
- name: Create namespace for Rancher
  kubernetes.core.k8s:
    kubeconfig: "/etc/rancher/rke2/rke2.yaml"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: cattle-system
  when: inventory_hostname == groups['server_nodes'][0]
  become: true
  environment:
    KUBECONFIG: /etc/rancher/rke2/rke2.yaml
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Ensure kubeconfig file exists and has correct permissions
  ansible.builtin.file:
    path: /etc/rancher/rke2/rke2.yaml
    state: file
    mode: '0644'
  when: inventory_hostname == groups['server_nodes'][0]
  become: true

- name: Add Jetstack Helm repository
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
  when: inventory_hostname == groups['server_nodes'][0]
  become: true

- name: Remove existing cert-manager CRDs
  kubernetes.core.k8s:
    kubeconfig: "/etc/rancher/rke2/rke2.yaml"
    state: absent
    definition:
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        name: "{{ item }}"
  loop:
    - certificaterequests.cert-manager.io
    - certificates.cert-manager.io
    - challenges.acme.cert-manager.io
    - clusterissuers.cert-manager.io
    - issuers.cert-manager.io
    - orders.acme.cert-manager.io
  when: inventory_hostname == groups['server_nodes'][0]
  become: true

- name: Deploy cert-manager
  kubernetes.core.helm:
    kubeconfig: "/etc/rancher/rke2/rke2.yaml"
    name: cert-manager
    chart_ref: jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    chart_version: "{{ cert_manager_version }}"
    values:
      installCRDs: true
  when: inventory_hostname == groups['server_nodes'][0]
  become: true

- name: Deploy Rancher
  kubernetes.core.helm:
    kubeconfig: "/etc/rancher/rke2/rke2.yaml"
    name: rancher
    chart_ref: rancher-latest/rancher
    release_namespace: cattle-system
    create_namespace: true
    values:
      hostname: "{{ rancher_hostname }}"
      replicas: 3
  when: inventory_hostname == groups['server_nodes'][0]
  become: true

# Wait for Server 1 to be ready before continuing with component deployment
- name: Wait for k8s nodes with node label 'server=true' to be ready
  ansible.builtin.command:
    cmd: "kubectl wait --for=condition=Ready nodes --selector server=true --timeout=600s"
  register: nodes_ready
  retries: 120
  delay: 10
  changed_when: true
  become_user: "{{ ansible_user }}"
  when: inventory_hostname == groups['server_nodes'][0]

- name: Ensure kubeconfig file exists and has correct permissions
  ansible.builtin.file:
    path: /etc/rancher/rke2/rke2.yaml
    state: file
    mode: '0644'
  when: inventory_hostname == groups['server_nodes'][0]
  become: false

- name: Check if kubeconfig file exists
  ansible.builtin.stat:
    path: /etc/rancher/rke2/rke2.yaml
  register: kubeconfig_stat
  when: inventory_hostname == groups['server_nodes'][0]

- name: Fail if kubeconfig file does not exist
  ansible.builtin.fail:
    msg: "Kubeconfig file not found at /etc/rancher/rke2/rke2.yaml"
  when: 
    - inventory_hostname == groups['server_nodes'][0]
    - not kubeconfig_stat.stat.exists

# Remove existing components if force_reinstall_components is true
- name: Remove existing components
  block:
    - name: Remove Rancher
      kubernetes.core.helm:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        name: rancher
        release_namespace: cattle-system
        state: absent

    - name: Remove cert-manager
      kubernetes.core.helm:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        name: cert-manager
        release_namespace: cert-manager
        state: absent

    - name: Remove MetalLB
      ansible.builtin.command:
        cmd: kubectl delete -f https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/config/manifests/metallb-native.yaml
      ignore_errors: yes
  when: 
    - inventory_hostname == groups['server_nodes'][0]
    - force_reinstall_components | bool

# Deploy MetalLB
- name: Deploy MetalLB and configure IP pool
  block:
    - name: Apply MetalLB namespace and resources
      ansible.builtin.command:
        cmd: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/config/manifests/metallb-native.yaml
      changed_when: true

    - name: Wait for MetalLB pods to be ready
      ansible.builtin.command:
        cmd: "kubectl wait --namespace metallb-system --for=condition=ready pod --selector=component=controller --timeout=1800s"
      changed_when: true

    - name: Apply MetalLB L2 Advertisement
      ansible.builtin.command:
        cmd: kubectl apply -f https://raw.githubusercontent.com/JamesTurland/JimsGarage/main/Kubernetes/RKE2/l2Advertisement.yaml
      changed_when: true

    - name: Apply MetalLB IP pool configuration
      ansible.builtin.template:
        src: templates/metallb-ippool.j2
        dest: /home/{{ ansible_user }}/ippool.yaml
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Apply MetalLB IP pool
      ansible.builtin.command:
        cmd: kubectl apply -f /home/{{ ansible_user }}/ippool.yaml
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  become_user: "{{ ansible_user }}"
  when: inventory_hostname == groups['server_nodes'][0]

# Deploy cert-manager
- name: Deploy cert-manager
  block:
    - name: Add Jetstack Helm repository
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io

    - name: Deploy cert-manager
      kubernetes.core.helm:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        force: true
        atomic: true
        values:
          installCRDs: true
        set:
          - name: "webhook.timeoutSeconds"
            value: "30"

    - name: Wait for cert-manager to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        kind: Deployment
        namespace: cert-manager
        name: cert-manager
      register: cert_manager_deployment
      until: cert_manager_deployment.resources[0].status.readyReplicas is defined and cert_manager_deployment.resources[0].status.readyReplicas == cert_manager_deployment.resources[0].spec.replicas
      retries: 20
      delay: 30
  when: inventory_hostname == groups['server_nodes'][0]
  become: true

# Deploy Rancher
- name: Deploy Rancher
  block:
    - name: Add Rancher Helm repository
      kubernetes.core.helm_repository:
        name: rancher-stable
        repo_url: https://releases.rancher.com/server-charts/stable

    - name: Create namespace for Rancher
      kubernetes.core.k8s:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        name: cattle-system
        api_version: v1
        kind: Namespace
        state: present

    - name: Deploy Rancher
      kubernetes.core.helm:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        name: rancher
        chart_ref: rancher-stable/rancher
        release_namespace: cattle-system
        create_namespace: true
        values:
          hostname: "{{ rancher_hostname }}"
          bootstrapPassword: "{{ rancher_bootstrap_password }}"

    - name: Wait for Rancher to be ready
      kubernetes.core.k8s_info:
        kube

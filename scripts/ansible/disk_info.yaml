---
- name: Gather disk information and save to file
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    remote_output_file: "/tmp/disk_info_{{ inventory_hostname }}.json"
    local_output_dir: "./disk_info_output"

  tasks:
    - name: Get list of all block devices with filesystem info
      command: lsblk -nfo NAME,SIZE,TYPE,FSTYPE,MOUNTPOINT
      register: block_devices
      changed_when: false

    - name: Get root filesystem device
      command: findmnt -no SOURCE /
      register: root_fs
      changed_when: false

    - name: Get LVM information
      command: pvs --noheadings -o pv_name,vg_name
      register: lvm_info
      changed_when: false

    - name: Parse disk information
      set_fact:
        disk_info: "{{ disk_info | default([]) + [{'name': item.split()[0], 'size': item.split()[1], 'type': item.split()[2], 'fstype': item.split()[3] if item.split() | length > 3 else 'N/A', 'mountpoint': item.split()[4] if item.split() | length > 4 else 'N/A'}] }}"
      loop: "{{ block_devices.stdout_lines }}"

    - name: Prepare disk information for output
      set_fact:
        output_info:
          hostname: "{{ inventory_hostname }}"
          total_devices: "{{ disk_info | length }}"
          os_device: "{{ root_fs.stdout }}"
          lvm_devices: "{{ lvm_info.stdout_lines | map('regex_replace', '^\\s*(.*)\\s+.*$', '\\1') | list }}"
          devices: "{{ disk_info | map(attribute='name') | list }}"
          disk_details: "{{ disk_info }}"

    - name: Write disk information to file on remote host
      template:
        src: disk_info.json.j2
        dest: "{{ remote_output_file }}"

    - name: Fetch disk information file from remote host
      fetch:
        src: "{{ remote_output_file }}"
        dest: "{{ local_output_dir }}/{{ inventory_hostname }}_disk_info.json"
        flat: yes

    - name: Remove temporary file from remote host
      file:
        path: "{{ remote_output_file }}"
        state: absent
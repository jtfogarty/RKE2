# bootstraps first server and copies configs for others/agents
---
- name: Prepare all nodes
  hosts: all
  roles:
    - prepare-nodes
    - rke2-download

- name: Set up all server nodes
  hosts: server_nodes
  roles:
    - role: rke2-prepare
  vars:
    is_first_server: "{{ inventory_hostname == groups['server_nodes'][0] }}"

- name: Configure all server nodes
  hosts: server_nodes
  roles:
    - role: add-server

- name: Debug - Check token on all server nodes
  hosts: server_nodes
  tasks:
    - name: Debug - Display token
      ansible.builtin.debug:
        var: rke2_token
      failed_when: rke2_token is not defined

    - name: Debug - Check token file
      ansible.builtin.stat:
        path: /var/lib/rancher/rke2/server/node-token
      register: token_file

    - name: Debug - Display token file status
      ansible.builtin.debug:
        var: token_file
        verbosity: 2
      failed_when: not token_file.stat.exists

- name: Configure RKE2 agent nodes
  hosts: agent_nodes
  roles:
    - add-agent

- name: Install kubernetes Python library
  hosts: server_nodes
  become: true
  tasks:
    - name: Ensure pip is installed
      ansible.builtin.apt:
        name: python3-pip
        state: present

    - name: Install kubernetes Python library
      ansible.builtin.pip:
        name: kubernetes
        state: present

- name: Apply manifests (excluding MetalLB)
  hosts: server_nodes
  roles:
    - role: apply-manifests
      vars:
        skip_metallb: true
  tags:
    - manifests

- name: Deploy cert-manager and Rancher
  hosts: server_nodes[0]
  tags:
    - cert-manager
    - rancher
  tasks:
    - name: Create cert-manager namespace
      kubernetes.core.k8s:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: cert-manager

    - name: Install cert-manager CRDs
      kubernetes.core.k8s:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        state: present
        src: "https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.crds.yaml"

    - name: Deploy cert-manager
      kubernetes.core.helm:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        name: cert-manager
        chart_ref: jetstack/cert-manager
        chart_version: "{{ cert_manager_version }}"
        release_namespace: cert-manager
        create_namespace: true
        values:
          installCRDs: true

    - name: Wait for cert-manager to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        kind: Deployment
        namespace: cert-manager
        name: cert-manager
      register: cert_manager_deployment
      until: 
        - cert_manager_deployment.resources is defined
        - cert_manager_deployment.resources | length > 0
        - cert_manager_deployment.resources[0].status.readyReplicas is defined
        - cert_manager_deployment.resources[0].status.readyReplicas == cert_manager_deployment.resources[0].spec.replicas
      retries: 30
      delay: 30

    - name: Create cattle-system namespace
      kubernetes.core.k8s:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: cattle-system

    - name: Deploy Rancher
      kubernetes.core.helm:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        name: rancher
        chart_ref: rancher-stable/rancher
        release_namespace: cattle-system
        create_namespace: false
        wait: yes
        timeout: 600
        set_values:
          hostname: "{{ rancher_hostname }}"
          replicas: "3"
          bootstrapPassword: "{{ rancher_bootstrap_password }}"

    - name: Wait for Rancher to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        kind: Deployment
        namespace: cattle-system
        name: rancher
      register: rancher_deployment
      until: 
        - rancher_deployment.resources is defined
        - rancher_deployment.resources | length > 0
        - rancher_deployment.resources[0].status.readyReplicas is defined
        - rancher_deployment.resources[0].status.readyReplicas == rancher_deployment.resources[0].spec.replicas
      retries: 30
      delay: 30

    - name: Wait for Rancher webhook to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "/etc/rancher/rke2/rke2.yaml"
        kind: Deployment
        namespace: cattle-system
        name: rancher-webhook
      register: rancher_webhook_deployment
      until: 
        - rancher_webhook_deployment.resources is defined
        - rancher_webhook_deployment.resources | length > 0
        - rancher_webhook_deployment.resources[0].status.readyReplicas is defined
        - rancher_webhook_deployment.resources[0].status.readyReplicas == rancher_webhook_deployment.resources[0].spec.replicas
      retries: 30
      delay: 30

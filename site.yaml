# bootstraps first server and copies configs for others/agents
---
- name: Check required environment variables
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Check if configuring additional nodes
      set_fact:
        skip_env_check: "{{ configure_additional_nodes | default(false) | bool }}"

    - name: Ensure required environment variables are set
      assert:
        that:
          - lookup('env', 'RANCHER_HOSTNAME') != ""
          - lookup('env', 'LETSENCRYPT_EMAIL') != ""
          - lookup('env', 'NAMECHEAP_API_KEY') != ""
          - lookup('env', 'NAMECHEAP_USERNAME') != ""
        fail_msg: "One or more required environment variables are not set. Please set RANCHER_HOSTNAME, LETSENCRYPT_EMAIL, NAMECHEAP_API_KEY, and NAMECHEAP_USERNAME."
      when: not skip_env_check
  tags: 
    - cert-manager
    - rancher

- name: Prepare all nodes
  hosts: all
  roles:
    - prepare-nodes
    - rke2-download

- name: Set up all server nodes
  hosts: server_nodes
  roles:
    - role: rke2-prepare
  vars:
    is_first_server: "{{ inventory_hostname == groups['server_nodes'][0] }}"

- name: Configure all server nodes
  hosts: server_nodes
  roles:
    - role: add-server

- name: Debug - Check token on all server nodes
  hosts: server_nodes
  tasks:
    - name: Debug - Display token
      ansible.builtin.debug:
        var: rke2_token
      failed_when: rke2_token is not defined

    - name: Debug - Check token file
      ansible.builtin.stat:
        path: /var/lib/rancher/rke2/server/node-token
      register: token_file

    - name: Debug - Display token file status
      ansible.builtin.debug:
        var: token_file
        verbosity: 2
      failed_when: not token_file.stat.exists

- name: Configure RKE2 agent nodes
  hosts: agent_nodes
  roles:
    - add-agent

- name: Install kubernetes Python library
  hosts: server_nodes
  become: true
  tasks:
    - name: Ensure pip is installed
      ansible.builtin.apt:
        name: python3-pip
        state: present

    - name: Install kubernetes Python library
      ansible.builtin.pip:
        name: kubernetes
        state: present

- name: Apply MetalLB manifests
  hosts: server_nodes
  tags:
    - metallb
  tasks:
    - block:
        - include_role:
            name: apply-manifests
      when: not configure_additional_nodes | bool


- name: Deploy cert-manager and Rancher
  hosts: server_nodes[0]
  tags:
    - cert-manager
    - rancher
  tasks:
    - block:
        # All your existing tasks go here
        - name: Check if cert-manager is installed
          kubernetes.core.helm_info:
            kubeconfig: "/etc/rancher/rke2/rke2.yaml"
            name: cert-manager
            release_namespace: cert-manager
          register: cert_manager_status
          ignore_errors: true

        # ... (all other tasks) ...

        - name: Wait for Rancher webhook to be ready
          kubernetes.core.k8s_info:
            kubeconfig: "/etc/rancher/rke2/rke2.yaml"
            kind: Deployment
            namespace: cattle-system
            name: rancher-webhook
          register: rancher_webhook_deployment
          until: 
            - rancher_webhook_deployment.resources is defined
            - rancher_webhook_deployment.resources | length > 0
            - rancher_webhook_deployment.resources[0].status.readyReplicas is defined
            - rancher_webhook_deployment.resources[0].status.readyReplicas == rancher_webhook_deployment.resources[0].spec.replicas
          retries: 30
          delay: 30
          when: rancher_status.status is not defined or rancher_status.status.status != 'deployed'
      when: not configure_additional_nodes | bool